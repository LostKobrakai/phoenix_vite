name: Elixir CI

# Define workflow that runs when changes are pushed to the
# `main` branch or pushed to a PR branch that targets the `main`
# branch. Change the branch name if your project uses a
# different name for the main branch like "master" or "production".
on:
  push:
    branches:
      - main
      - "v*.*"
  pull_request:
  workflow_call:

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: ["26.2.5.13", "27.3.4.1"] # Define the OTP version [required]
        elixir: ["1.18.4"] # Define the elixir version [required]
        include:
          - otp: "26.2.5.13"
            elixir: "1.18.4"
          - otp: "27.3.4.1"
            elixir: "1.18.4"
    steps:
      # Step: Setup Elixir + Erlang image as the base.
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}

      # Step: Check out the code.
      - name: Checkout code
        uses: actions/checkout@v4

      # Step: Define how to cache deps. Restores existing cache if present.
      - name: Cache deps
        id: cache-deps
        uses: actions/cache@v4
        env:
          cache-name: cache-elixir-deps
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-

      # Step: Define how to cache the `_build` directory. After the first run,
      # this speeds up tests runs a lot. This includes not re-compiling our
      # project's downloaded deps every run.
      - name: Cache compiled build
        id: cache-build
        uses: actions/cache@v4
        env:
          cache-name: cache-compiled-build
        with:
          path: _build
          key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-${{ env.cache-name }}-
            ${{ runner.os }}-mix-

      # Step: Download project dependencies. If unchanged, uses
      # the cached version.
      - name: Install dependencies
        run: mix deps.get --check-locked

      # Step: Install test dependency
      - name: Install test dependency
        run: mix archive.install hex phx_new --force

      # Step: Run a few useful checks upfront
      - name: Run a bunch of useful elixir level checks
        run: mix checks

      # Step: Execute the tests.
      - name: Run tests
        run: mix test --color

      # Step: Run javascript tests
      - name: Run assets tests
        run: mix assets.test

      # Step: Run elixir integration tests
      - name: Run elixir integration tests
        run: mix integration.test --color
